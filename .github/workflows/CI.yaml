name: CI

on:
  workflow_call:
    inputs:
      src:
        description: The folder containing the source code
        type: string
        required: true

jobs:
  lint-docs:
    name: Lint & Docs ubuntu-latest Py3.12
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        # This gets all branches (1 = only current branch)
        fetch-depth: 0
    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a
    # More info on options: https://github.com/conda-incubator/setup-miniconda
    - uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: "3.12"
        environment-file: devtools/conda-envs/test_env.yaml
        activate-environment: test
        auto-update-conda: false
        auto-activate-base: false
        show-channel-urls: true
    - name: Install package
      # conda setup requires this special shell
      shell: bash -l {0}
      run: |
        python -m pip install . --no-deps
        conda list
    - name: Run linters
      shell: bash -l {0}
      run: |
        black --check --diff --extend-exclude '_version.py' ${{ inputs.src }} tests
        flake8 ${{ inputs.src }} tests
    - name: Test documentation
      shell: bash -l {0}
      run: |
        make html

  test:
    name: Test ${{ matrix.os }} Py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    needs: lint-docs
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest]
        python-version: ["3.11", "3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a
    - uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: ${{ matrix.python-version }}
        environment-file: devtools/conda-envs/test_env.yaml
        activate-environment: test
        auto-update-conda: false
        auto-activate-base: false
        show-channel-urls: true
    - name: Install package
      shell: bash -l {0}
      run: |
        python -m pip install . --no-deps
        conda list
    - name: Run tests
      shell: bash -l {0}
      run: |
        pytest -v --cov=${{ inputs.src }} --cov-report=xml --color=yes tests/
    - name: CodeCov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}
