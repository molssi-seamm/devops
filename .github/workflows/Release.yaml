name: Release

on:
  workflow_call:
    inputs:
      src:
        description: The folder containing the source code
        type: string
        required: true

jobs:
  lint-docs:
    name: Lint & Docs ubuntu-latest Py3.12
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a
    # More info on options: https://github.com/conda-incubator/setup-miniconda
    - uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: "3.12"
        environment-file: devtools/conda-envs/test_env.yaml
        activate-environment: test
        auto-update-conda: false
        auto-activate-base: false
        show-channel-urls: true
    - name: Install package
      # conda setup requires this special shell
      shell: bash -l {0}
      run: |
        python -m pip install . --no-deps
        conda list
    - name: Run linters
      shell: bash -l {0}
      run: |
        black --check --diff --extend-exclude '_version.py' ${{ inputs.src }} tests
        flake8 ${{ inputs.src }} tests
    - name: Documentation
      shell: bash -l {0}
      run: |
        make html
    - name: Deploy documentation
      uses: peaceiris/actions-gh-pages@v4
      # if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docs/_build/html

  test:
    name: Test ${{ matrix.os }} Py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    needs: lint-docs
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest]
        python-version: ["3.11", "3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a
    - uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: ${{ matrix.python-version }}
        environment-file: devtools/conda-envs/test_env.yaml
        activate-environment: test
        auto-update-conda: false
        auto-activate-base: false
        show-channel-urls: true
    - name: Install package
      shell: bash -l {0}
      run: |
        python -m pip install . --no-deps
        conda list
    - name: Run tests
      shell: bash -l {0}
      run: |
        pytest -v --doctest-modules --cov=${{ inputs.src }} --cov-report=xml --color=yes tests/ ${{ inputs.src }}
    - name: CodeCov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}

  deploy:
    name: PyPi ubuntu-latest Py3.12
    # Run only for tagged releases publishing development or release candidates
    # only to test.pypi, otherwise to both it and the main pypi.
    if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: [lint-docs, test]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python "3.12"
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install package
      shell: bash -l {0}
      run: |
        python -m pip install . --no-deps
        conda list
    - name: Install pypa/build
      run: |
        python -m pip install build --user
    - name: Build a binary wheel and a source tarball
      run: |
        python -m build --sdist --wheel --outdir dist/
        ls -l dist/
    - name: Publish distribution ðŸ“¦ to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.test_pypi_password }}
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true
    - name: Publish distribution ðŸ“¦ to PyPI
      if: contains(github.ref, 'dev') == false && contains(github.ref, 'rc') == false
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.pypi_password }}
